/*Actualizaciones en SQL: A, B, M (ALTAS, BAJAS Y MODIFICACIONES)

ALTAS -> INSERT INTO nombre_tabla [ ( columna1, ... ) VALUES ( valor1,... ) ]

		 INSERT INTO nombre_tabla [ ( columna1,... ) ] SELECT... FROM... WHERE...

BAJAS -> DELETE FROM nombre_tabla [ where... ]

			||				||			||		SELECT...

MODIFICACIONES -> UPDATE nombre_tabla
				  
				  SET nombre_columna = valor, ...

				  [ WHERE... ]
*/

--Dar de alta a un registro en la tabla trabaja:

INSERT INTO trabaja VALUES ( "748A", "PROM8", 10 )

--Vamos a dar de alta un proyecto

INSERT INTO PROYECTOS( CLAVE-PROY, FECHA_COMIENZO, PRESUPUESTO ) VALUES ( "PROYECTO 20", 7/2/2017, "30000" )

/* CON LA TABLA DE EMPLEADOS Y LA DE DPTOS CREAR OTRA TABLA LLAMADA INFOR_DPTOS QUE TENGA LOS CAMPOS(NOMRE_DPTO, NUMERO_EMPLEADOS(DE DICHO DPTO) Y SALARIO TOTAL DE LOS 
EMPLEADOS DE DICHO DPTO) DEFINIR LA ESTRUCTURA DE LA TABLA E INTRODUCIR DATOS EN LA TABLA CREADA */

CREATE TABLE INFOR_DPTOS (

	NOMRE_DPTO varchar2(5),

	NUMERO_EMPLEADOS varchar2(5),

	SALARIO_TOTAL varchar2(6,2)

);
INSERT INTO INFOR_DPTOS SELECT D.NOM, COUNT(*) "NUMERO_EMPLEADOS" FROM DPTOS D, EMPL E WHERE D.COD_DPTO = E.COD_DPTO GROUP BY 

--BORRAR TODOS LOS EMPLEADOS DE LA TABLA EMPLEADOS:

DELETE FROM EMPLEADOS

-- ELIMINAR TODOS LOS EMPLEADOS DEL DPTO DE FINANZAS

DELETE FROM EMPLEADOS WHERE COD_DPTO = ( SELECT COD_DPTO FROM TABLA_DPTOS WHERE NOM="FINANZAS" )

--CAMBIAR EL DPTO Y COD DE ZONA AL QUE PERTENECE EL PROYECTO NUMERO 10, LOS NUEVOS VALORES SON: COD_ZONA Z30 Y CODIGO DPTO 8 

UPDATE PROYECTOS

	SET COD_ZONA = "Z30", COD DPTO = "8"

	WHERE COD_PROYECTO= "10"

--A TODOS LOS EMPLEADOS DEL DPTO DE INVESTIGACION AUMENTAR EL SALARIO EN UN 10% (MODIFICAR)

/*SELECT SALARIO * 1.10

FROM EMPLEADOS 

WHERE COD_DPTO = (	SELECT COD_DPTO

					FROM DPTOS

					WHERE NOM="INVESTIGACION");*/ --SI QUEREMOS VISUALIZAR SOLO LA CONSULTA

UPDATE EMPLEADOS SET SALARIO = SALARIO * 1.10 WHERE COD_DPTO = (SELECT COD_DPTO FROM DPTOS WHERE NOM="INVESTIGACION") --SI QUEREMOS MODIFICAR

/*DISPONEMOS DE UNA TABLA VACIA CON IGUAL NUMERO DE COLUMNAS Y CON LAS MISMAS CARACTERISTICAS QUE LA TABLA DE EMPLEADOS HAY QUE PASAR A ESTA NUEVA TABLA TODOS 
LOS EMPLEADOS QUE SE HAN INCORPORADO A LA EMPRESA A PARTIR DE AÃ‘O 1971*/

INSERT INTO VACIA SELECT * FROM EMPLEADOS WHERE FECHA_INC > "31/12/1970"

--UNA VISTA ES UNA SENTENCIA SELECT A LA QUE SE LE DA UN NOMBRE

CREATE VIEW NOMBREVISTA[ ( COL1, COL2,... ) ] AS SELECT FROM [WHERE]

/* PERMISOS

CONCEDER PERMISOS 

	CLAUSULA GRANT { DELETE | INSERT | UPDATE | SELECT } ON TABLA/VISTA, ... TO USUARIO [ WITH GRANT OPTION ( LOS PERMISOS SE PUEDEN PROPAGAR )]

DENEGAR PERMISOS
	
	REVOKE { DELETE | INSERT | UPDATE | SELECT } ON TABLA/VISTA,... FROM USUARIOS

*/

CREATE SCHEMA EMPRESAX AUTHORIZATION A1

--A1 CONCEDE PERMISOS DE DARLE ALTA Y BORRAR REGISTROS DE LA TABLA EMPLEADOS Y LA TABLA DEPARTAMENTOS AL USUARIO A2

GRANT INSERT, DELETE ON EMPLEADOS, DEPARTAMENTOS TO A2

--A1 PERMITE A A3 OBTENER INFORMACION DE LAS TABLAS DE EMPLEADOS Y DEPARTAMENTOS Y PUEDE PROPAGAR DICHOS PRIVILEGIOS A OTRAS CUENTAS

GRANT SELECT ON EMPLEADOS, DPTOS TO A3 WITH GRANT OPTION

--A3 CONCEDE EL PRIVILEGIO DE PODER VISUALIZAR TODOS LOS REGISTROS DE LA TABLA EMPLEADOS A A4

GRANT SELECT ON EMPLEADO TO A4

--A1 LE QUITA EL PRIVILEGIO DEL SELECT A A3
 
REVOKE SELECT ON EMPLEADOS FROM A3 

--DNI Y TELEFONO DE LOS EMPLEADOS QUE HAN TRABAJADO MAS DE 1000 HORAS

/*SELECT DNI, TELEFONO

FROM EMPLEADOS

WHERE COD_EMPLEADO IN (SELECT COD_EMPLEADO
					  FROM TRABAJA
					  WHERE HORAS > 1000);*/



