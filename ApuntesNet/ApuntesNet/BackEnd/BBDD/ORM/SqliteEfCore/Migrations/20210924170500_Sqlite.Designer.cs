// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SqliteEfCore.Database;

namespace SqliteEfCore.Migrations
{
    [DbContext(typeof(ContextoSqlite))]
    [Migration("20210924170500_Sqlite")]
    partial class Sqlite
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.8");

            modelBuilder.Entity("SqliteEfCore.Database.Sqlite.Pueblo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nombre")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Pueblos");
                });

            modelBuilder.Entity("SqliteEfCore.Database.Sqlite.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Edad")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("FechaHoy")
                        .HasColumnType("TEXT");

                    b.Property<string>("Nombre")
                        .HasColumnType("TEXT");

                    b.Property<int>("PuebloId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("PuebloId");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("SqliteEfCore.Database.Sqlite.Usuario", b =>
                {
                    b.HasOne("SqliteEfCore.Database.Sqlite.Pueblo", "PuebloIdNavigation")
                        .WithMany()
                        .HasForeignKey("PuebloId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PuebloIdNavigation");
                });
#pragma warning restore 612, 618
        }
    }
}
